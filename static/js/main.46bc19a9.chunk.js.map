{"version":3,"sources":["hooks/use-custom-color.js","components/Calendar/MonthCard.js","helpers/index.js","components/Calendar/Calendar.js","components/Users.js","components/Error.js","hooks/use-fetch-users.js","components/App.js","index.js"],"names":["isInRange","value","from","to","MonthWrapper","styled","div","MonthCard","usersLength","month","isActive","onHover","color","usersByMonthLength","useCustomColor","onMouseOver","style","background","className","getMonthsList","locale","format","Intl","DateTimeFormat","months","testDate","Date","UTC","push","getMonthIDByDate","date","getUTCMonth","Wrapper","Calendar","users","activeMonth","setActiveMonth","monthsList","map","monthID","key","Object","values","length","Title","h2","UserWrapper","Users","user","id","firstName","lastName","Error","children","FETCH_URL","h1","Container","Loader","App","initial","useState","setUsers","error","setError","useEffect","fetch","then","res","json","data","filter","dob","catch","err","name","message","useFetchUsers","usersInMonth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46bc19a9.chunk.js","sourcesContent":["/*\n\t[0-2] - сірий\n\t[3-6] - синій\n\t[7-10] - зелений\n\t[11+] - червоний\n*/\n\nconst isInRange = (value, from, to) => value >= from && value <= to;\n\nconst useCustomColor = usersByMonthLength => {\n  let color = \"white\";\n  if (isInRange(usersByMonthLength, 0, 2)) {\n    color = \"#9e9e9e\";\n  } else if (isInRange(usersByMonthLength, 3, 6)) {\n    color = \"#039be5\";\n  } else if (isInRange(usersByMonthLength, 7, 10)) {\n    color = \"#43a047\";\n  } else if (usersByMonthLength >= 11) {\n    color = \"#f44336\";\n  }\n\n  return color;\n};\n\nexport { useCustomColor };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useCustomColor } from \"../../hooks/use-custom-color\";\n\nconst MonthWrapper = styled.div`\n  user-select: none;\n  cursor: pointer;\n  box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.3);\n  border-radius: 50%;\n  margin: 1rem;\n  padding: 1rem;\n  width: 5rem;\n  height: 5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.2s;\n  color: #fff;\n  border: 1px solid transparent;\n  &.active {\n    box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.8);\n    border-color: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nconst MonthCard = ({ usersLength, month, isActive, onHover }) => {\n  const color = useCustomColor(usersLength);\n\n  return (\n    <MonthWrapper\n      onMouseOver={onHover}\n      style={{ background: color }}\n      className={isActive ? \"active\" : \"\"}\n    >\n      {month}\n    </MonthWrapper>\n  );\n};\n\nexport default MonthCard;\n","function getMonthsList(locale) {\n  const format = new Intl.DateTimeFormat(locale, { month: \"long\" });\n  const months = [];\n  for (let month = 0; month < 12; month++) {\n    const testDate = new Date(Date.UTC(2000, month, 1, 0, 0, 0));\n    months.push(format.format(testDate));\n  }\n  return months;\n}\n\nfunction getMonthIDByDate(date) {\n  return new Date(date).getUTCMonth();\n}\n\nexport { getMonthsList, getMonthIDByDate };\n","import React from \"react\";\nimport MonthCard from \"./MonthCard\";\nimport styled from \"styled-components\";\nimport { getMonthsList } from \"../../helpers\";\n\nconst months = getMonthsList(\"en\");\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n`;\n\nconst Calendar = ({ users, activeMonth, setActiveMonth }) => {\n  const monthsList = months.map((month, monthID) => {\n    return (\n      <MonthCard\n        key={monthID}\n        month={month}\n        usersLength={Object.values(users[monthID]).length}\n        onHover={() => setActiveMonth(monthID)}\n        isActive={activeMonth === monthID}\n      />\n    );\n  });\n  return <Wrapper>{monthsList}</Wrapper>;\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h2`\n  text-align: center;\n  margin: 2rem 0 0.8rem;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst UserWrapper = styled.div`\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.7);\n  margin: 0.5rem;\n  padding: 1rem;\n`;\n\nconst Users = ({ users }) => {\n  return (\n    <>\n      <Title>List of users</Title>\n      <Wrapper>\n        {users.map(user => (\n          <UserWrapper key={user.id}>\n            {user.firstName} {user.lastName}\n          </UserWrapper>\n        ))}\n      </Wrapper>\n      People was born {users.length}\n    </>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  text-align: center;\n  padding: 1.25rem 0;\n  max-width: 20rem;\n  margin: 0 auto;\n  color: #721c24;\n  background-color: #f8d7da;\n  border-color: #f5c6cb;\n`;\n\nconst Error = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default Error;\n","import { useEffect, useState } from \"react\";\nimport { getMonthsList, getMonthIDByDate } from \"../helpers\";\n\nconst FETCH_URL = `https://yschool.getsandbox.com/users`;\n\nconst months = getMonthsList();\n\nconst useFetchUsers = (initial = []) => {\n  const [users, setUsers] = useState(initial);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetch(FETCH_URL)\n      .then(res => res.json())\n      .then(data => {\n        return months.map(monthID =>\n          data.filter(user => monthID === getMonthIDByDate(user.dob))\n        );\n      })\n      .then(data => setUsers(data))\n      .catch(err => {\n        setError(`${err.name} ${err.message}`);\n      });\n\n    return () => {\n      setUsers([]);\n      setError(false);\n    };\n  }, []);\n\n  return { users, error };\n};\n\nexport { useFetchUsers };\n","import React, { useState } from \"react\";\nimport Calendar from \"./Calendar/Calendar\";\nimport Users from \"./Users\";\nimport Error from \"./Error\";\nimport { useFetchUsers } from \"../hooks/use-fetch-users\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h1`\n  margin: 1rem;\n  text-align: center;\n`;\nconst Container = styled.div`\n  max-width: 54.6875rem;\n  margin: 0 auto;\n`;\nconst Loader = styled.div`\n  position: absolute;\n  color: #4caf50;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst App = () => {\n  const { users, error } = useFetchUsers([]);\n\n  const [activeMonth, setActiveMonth] = useState(new Date().getUTCMonth());\n\n  const usersInMonth = !users.length ? [] : Object.values(users[activeMonth]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Container>\n          <Title>Demographic Density Demo</Title>\n        </Container>\n      </header>\n      {error && (\n        <Error>\n          <p>{error}</p>\n          <p>Please see console for more information</p>\n        </Error>\n      )}\n      {!users.length ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Container>\n            <Calendar\n              users={users}\n              activeMonth={activeMonth}\n              setActiveMonth={setActiveMonth}\n            />\n          </Container>\n          <Container>\n            <Users users={usersInMonth} />\n          </Container>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}